# Default Job configuration file for rigid body simulation job

# WARNING:
# Take care that indentation needs to be made by tabulator character, because indentation by spaces will result in multiline arguments!
# Section and option names may contain the following characters [_a-zA-Z-], e.g ${Sec1-Sub1:Opt_1-32}

# Environment variables are prepended with 'ENV::'
# All options with value "will_be_overwritten" mark options which do not need to be defined yet because they will get automatically generated 
#
# The submit.py script defines on more additional variable:
#   General:modulePathJobGen   : This is the path to the jobGenerators module (where all standart templates can be found, for certain generators) 
#   General:currentWorkDir     : The directory where the submit.py has been executed (mainly submit.py is executed in the Job folder)

[Job]
jobName              = ${Cluster:jobName}-P-${Job:jobIdx}
scriptDir            = ${Cluster:jobGeneratorOutputDir}/${Job:jobName}

# =====================================================


# All these files listed under this section are first replaced with the variables defined here and by the generator
# and the output is written to the jobs script directory folder by default.
# To each template defined here two additional options are generated if they do not yet exist!
# TempaltesOut:myTemplate  : The output path of the template ${Templates:myTemplate}
# The default path is the the job script directory ${Job:scriptDir}/basename(${Templates:myTemplate})

[Templates]
dataFolder               = { "inputFile" : "./config/data", "configurator" : { "modulePath" : "${General:configuratorModuleDir}/jobGenerators/copyAdjuster.py" , "moduleName" : "copyAdjuster" , "className" : "CopyAdjuster" }, "settings" :{ "type" : "symlink" } }

jobIni                  = { "inputFile" : "./config/Job.ini", "configurator" : { "modulePath" : "${General:configuratorModuleDir}/jobGenerators/copyAdjuster.py" , "moduleName" : "copyAdjuster" , "className" : "CopyAdjuster" }, "settings" :{ "type" : "symlink" } }



#launchIni               = { "inputFile" : "./config/Launch.ini", "configurator" : { "modulePath" : "${General:configuratorModuleDir}/jobGenerators/copyAdjuster.py" , "moduleName" : "copyAdjuster" , "className" : "CopyAdjuster" }, "settings" :{ "type" : "symlink" } }
launchIni                  = ./config/Launch.ini

sceneFile               = { "inputFile" : "./config/SceneFile.xml", "configurator" : { "modulePath" : "${General:configuratorModuleDir}/jobGenerators/xmlAdjuster.py" , "moduleName" : "xmlAdjuster" , "className" : "XmlAdjuster" }, "settings" :{ "overwrite" :  true , "defaultNamespace" : "SceneFile" , "transforms" : [  ${ParameterStudy:muRange} , ${ParameterStudy:maxIterRange} ] } }

[TemplatesOut]
dataFolder               = ${Job:scriptDir}/data
jobIni                   = ${Job:scriptDir}/Job.ini
#launchIni                = ${Job:scriptDir}/Launch.ini
sceneFile                = ${Job:scriptDir}/scene/SceneFile.xml

[ParameterStudy]

# Friction parameter mu ( 16 values )
muList                  = [ 0.0 , 0.1 , 0.2 , 0.3 , 0.4 , 0.5 , 0.6, 0.7 , 0.8 , 0.9 , 1 , 1.5 , 2 , 2.5 , 3, 3]
maxIterList             = [ 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 20000 ]
muRange                 = { "xpath" : "./SceneSettings/ContactParameterMap/ContactParameter[1]" , "attributes" : {"mu" : ${ParameterStudy:muList} } }
maxIterRange       = { "xpath" : "./SceneSettings/TimeStepperSettings/InclusionSolverSettings" , "attributes" : {"maxIter" : ${ParameterStudy:maxIterList} } }
